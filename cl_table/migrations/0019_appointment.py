# Generated by Django 3.0.7 on 2023-07-17 12:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cl_app', '0013_tmpitemhelpersession'),
        ('custom', '0005_voucherrecord'),
        ('cl_table', '0018_appttype'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appt_id', models.AutoField(db_column='Appt_id', primary_key=True, serialize=False)),
                ('cust_no', models.CharField(blank=True, max_length=20, null=True)),
                ('appt_date', models.DateField(blank=True, db_column='Appt_date', null=True)),
                ('appt_fr_time', models.TimeField(blank=True, db_column='Appt_Fr_time', null=True)),
                ('appt_type', models.CharField(blank=True, db_column='Appt_type', max_length=20, null=True)),
                ('appt_phone', models.CharField(blank=True, db_column='Appt_phone', max_length=20, null=True)),
                ('appt_remark', models.CharField(blank=True, db_column='Appt_remark', max_length=250, null=True)),
                ('emp_no', models.CharField(blank=True, max_length=10, null=True)),
                ('emp_name', models.CharField(blank=True, max_length=80, null=True)),
                ('appt_isactive', models.BooleanField(db_column='Appt_Isactive', default=True)),
                ('cust_name', models.CharField(blank=True, db_column='Cust_name', max_length=60, null=True)),
                ('appt_code', models.CharField(blank=True, db_column='Appt_code', max_length=50, null=True)),
                ('appt_status', models.CharField(blank=True, choices=[('Booking', 'Booking'), ('Waiting', 'Waiting List'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled'), ('Arrived', 'Arrived'), ('Done', 'Done'), ('LastMinCancel', 'Cancelled Last Minute'), ('Late', 'Late'), ('No Show', 'No Show'), ('Block', 'Block')], db_column='Appt_Status', default='Booking', max_length=20, null=True)),
                ('appt_to_time', models.TimeField(blank=True, db_column='Appt_To_time', null=True)),
                ('sa_transacno', models.CharField(blank=True, max_length=40, null=True)),
                ('appt_created_by', models.CharField(blank=True, db_column='Appt_Created_By', max_length=50, null=True)),
                ('appt_created_date', models.DateTimeField(auto_now_add=True, db_column='Appt_Created_Date', null=True)),
                ('appt_created_time', models.DateTimeField(auto_now_add=True, db_column='Appt_Created_Time', null=True)),
                ('itemsite_code', models.CharField(blank=True, db_column='ItemSite_Code', max_length=20, null=True)),
                ('walkin', models.BooleanField(db_column='WalkIn', null=True)),
                ('new', models.BooleanField(db_column='New', null=True)),
                ('duration', models.CharField(blank=True, db_column='Duration', max_length=10, null=True)),
                ('reason', models.CharField(blank=True, db_column='Reason', max_length=50, null=True)),
                ('room_code', models.CharField(blank=True, db_column='Room_Code', max_length=10, null=True)),
                ('source_code', models.CharField(blank=True, db_column='Source_Code', max_length=50, null=True)),
                ('cust_refer', models.CharField(blank=True, db_column='Cust_Refer', max_length=50, null=True)),
                ('requesttherapist', models.BooleanField(db_column='requestTherapist', null=True)),
                ('new_remark', models.CharField(blank=True, db_column='New_Remark', max_length=800, null=True)),
                ('item_code', models.CharField(blank=True, db_column='item_Code', max_length=20, null=True)),
                ('treatmentcode', models.CharField(blank=True, db_column='treatmentCode', max_length=40, null=True)),
                ('sec_status', models.CharField(blank=True, choices=[('Rescheduled', 'Rescheduled'), ('Notified Once', 'Notified Once'), ('Notified Twice', 'Notified Twice')], max_length=25, null=True)),
                ('recurring_days', models.IntegerField(blank=True, null=True)),
                ('recurring_qty', models.IntegerField(blank=True, null=True)),
                ('recur_linkcode', models.CharField(blank=True, db_column='Recur_Linkcode', max_length=200, null=True)),
                ('linkcode', models.CharField(blank=True, db_column='Linkcode', max_length=200, null=True)),
                ('link_flag', models.BooleanField(db_column='Link Flag', default=False)),
                ('add_duration', models.TimeField(null=True)),
                ('checktype', models.CharField(blank=True, choices=[('service', 'service'), ('package', 'package'), ('freetext', 'freetext')], db_column='CheckType', max_length=50, null=True)),
                ('treat_parentcode', models.CharField(blank=True, db_column='Treat_ParentCode', max_length=20, null=True)),
                ('bookedby', models.CharField(blank=True, db_column='bookedby', max_length=200, null=True)),
                ('editedby', models.CharField(blank=True, db_column='editedby', max_length=200, null=True)),
                ('maxclasssize', models.IntegerField(blank=True, db_column='maxclasssize', null=True)),
                ('dt_lineno', models.IntegerField(blank=True, db_column='dt_LineNo', null=True)),
                ('Appt_Created_Byid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cl_table.Fmspw')),
                ('Appt_typeid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cl_table.ApptType')),
                ('ItemSite_Codeid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cl_app.ItemSitelist')),
                ('Item_Codeid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cl_table.Stock')),
                ('Room_Codeid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='custom.Room')),
                ('Source_Codeid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cl_table.Source')),
                ('cust_noid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cl_table.Customer')),
                ('emp_noid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cl_table.Employee')),
            ],
            options={
                'db_table': 'Appointment',
            },
        ),
    ]
